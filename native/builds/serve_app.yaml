## Deploy a production environment using Nginx

- name: create ~/.config directory
  file: path={{ local_path }}/.config state=directory

- name: copy gunicorn template
  template: src={{ inventory_dir }}/app_config.py.j2 dest={{ local_path}}/.config/{{ gunicorn_config_file }}

- name: determine if systemd or upstart
  command: dpkg -S /sbin/init
  register: dpkg_stdout

- set_fact:
    init_system: "{{ dpkg_stdout.stdout[0:7] }}"

- name: copy service template for systemd
  template: src={{ inventory_dir }}/app.service.j2 dest=/lib/systemd/system/{{ app_service_name }}.service
  when: init_system == "systemd"
  become: true

- name: update systemd
  command: systemctl daemon-reload
  when: init_system == "systemd"
  become: true

- name: copy service template for upstart
  template: src={{ inventory_dir }}/app.conf.j2 dest=/etc/init/{{ app_service_name }}.conf
  when: init_system == "upstart"
  become: true

- name: create sms-services-ssl directory
  file: path=/sms-services-ssl state=directory
  when: mode == "https"
  become: true

- name: copy ssl certificate for nginx
  template: src={{ ssl_location }}/sms-news.crt dest=/sms-services-ssl/sms-news.crt
  when: mode == "https"
  become: true

- name: copy ssl key for nginx
  template: src={{ ssl_location }}/sms-news.key dest=/sms-services-ssl/sms-news.key
  when: mode == "https"
  become: true

- name: allow read an execute permission on ssl.
  shell: "chmod -R a+rx /sms-services-ssl"
  when: mode == "https"
  become: true

- name: run server
  service: name={{ app_service_name }} state=restarted
  become: true

- name: copy nginx template
  template: src={{ inventory_dir }}/nginx-app.j2 dest=/etc/nginx/sites-available/{{ app_service_name }}
  become: true

- name: link files for nginx
  file: src=/etc/nginx/sites-available/{{ app_service_name }} dest=/etc/nginx/sites-enabled/{{ app_service_name }} state=link
  become: true

- name: restart nginx
  service: name=nginx state=restarted
  become: true

- name: enable port in ufw
  ufw:
    rule: allow
    port: "{{ mapped_port }}"
    proto: tcp
  become: true

- name: check that app is up and running
  uri: url={{ test_path }} validate_certs=no
